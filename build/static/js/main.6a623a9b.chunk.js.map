{"version":3,"sources":["Navbar/Nav.js","Api/Api.js","Component/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","AppBar","position","Toolbar","IconButton","color","Typography","variant","API_KEY","Cart","match","useState","detail","setDetail","open","setOpen","handleClick","id","url","fetch","then","response","json","catch","error","console","log","getMatchDetail","data","handleOpen","handleClose","Card","style","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","width","src","alt","CardActions","Button","onClick","unique_id","marginLeft","Date","dateTimeGMT","toLocaleString","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","matchStarted","score","DialogActions","autoFocus","App","matches","setMatches","useEffect","alert","getmatches","className","sm","map","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAgBeA,EAdH,WACR,OACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAlB,SACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8B,4ECTVC,EAAU,+BC4GDC,EAvGF,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EAEmBC,mBAAS,IAF5B,mBAEAC,EAFA,KAEQC,EAFR,OAGeF,oBAAS,GAHxB,mBAGAG,EAHA,KAGMC,EAHN,KAKpBC,EAAY,SAACC,IDIU,SAACA,GAC1B,IAAMC,EAAG,wDAAoDV,EAApD,sBAAyES,GAClF,OAAOE,MAAMD,GACZE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OCPhCG,CAAeV,GACdG,MAAK,SAACQ,GACLf,EAAUe,GACVH,QAAQC,IAAI,cAAeE,MAC5BL,OAAM,SAACC,GAAD,OAAUC,QAAQC,IAAIF,MAC7BK,KA2CSC,EAAY,WAChBf,GAAQ,IAGJc,EAAW,WACfd,GAAQ,IAuCb,OAAO,eAAC,WAAD,WA/EH,eAACgB,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,IAA1B,UACE,cAACC,EAAA,EAAD,UACE,eAAEC,EAAA,EAAF,CAAOC,WAAS,EAACC,QAAQ,SAASC,WAAY,SAAUC,QAAS,EAAjE,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAAClC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BG,EAAO,cAEnC,cAACyB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,qBACER,MAAO,CAAES,MAAO,KAChBC,IAAI,cAAcC,IAAI,WAE1B,cAACR,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAAClC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BG,EAAO,mBAIvC,cAACkC,EAAA,EAAD,UACE,eAACT,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACQ,EAAA,EAAD,CAAQC,QAAS,WAEf9B,EAAYN,EAAMqC,YAGpBxC,QAAQ,YAAYF,MAAM,UAL1B,0BAQA,eAACwC,EAAA,EAAD,CAAQb,MAAO,CAAEgB,WAAY,GAAKzC,QAAQ,YAAYF,MAAM,UAA5D,wBACa,IAAI4C,KAAKvC,EAAMwC,aAAaC,4BAmB5C,eAACC,EAAA,EAAD,CAAQtC,KAAMA,EAAMuC,QAASvB,EAA7B,UACG,cAACwB,EAAA,EAAD,CAAarC,GAAG,qBAAhB,SAAsC,mBACtC,cAACsC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAmBvC,GAAG,2BAAtB,UACR,cAACX,EAAA,EAAD,UAAaM,EAAO6C,OACpB,eAACnD,EAAA,EAAD,mBAEE,uBAAM0B,MAAO,CAAC0B,UAAU,SAAUC,WAAW,QAA7C,UACG/C,EAAOgD,aAAe,UAAY,oBADrC,IAC2D,UAI7D,eAACtD,EAAA,EAAD,mBAEE,sBAAM0B,MAAO,CAAC0B,UAAU,SAAUC,WAAW,QAA7C,SAEG/C,EAAOiD,gBAQN,cAACC,EAAA,EAAD,UACE,cAACjB,EAAA,EAAD,CAAQC,QAAShB,EAAazB,MAAM,UAAU0D,WAAS,EAAvD,4BCvCCC,MAhDf,WAAgB,IAAD,EAEYrD,mBAAS,IAFrB,mBAERsD,EAFQ,KAEAC,EAFA,KAgBb,OAbAC,qBAAU,YFRc,WACtB,IAAMjD,EAAG,iDAA6CV,GAEtD,OAAOW,MAAMD,GAAKE,MAAK,SAACC,GAAD,OAAcA,EAASC,UACzCC,OAAM,SAACC,GAAD,OAAW4C,MAAM,oCAAqC5C,OEOjE6C,GACGjD,MAAK,SAACQ,GACLsC,EAAWtC,EAAKqC,YAGjB1C,OAAM,SAACC,GAAD,OAAW4C,MAAM,+BAEzB,IAID,sBAAKE,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAChE,EAAA,EAAD,CAAYC,QAAQ,KAAKyB,MAAO,CAACC,UAAU,IAA3C,0CAGA,eAACE,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMoC,GAAG,MAET,cAACpC,EAAA,EAAD,CAAMoC,GAAG,IAAT,SAEAN,EAAQO,KAAI,SAAC9D,GAAD,OACV,cAAC,WAAD,UAEiB,YAAZA,EAAM+D,KACL,cAAC,EAAD,CAA4B/D,MAAOA,GAAxBA,EAAMqC,WACd,iBC7BJ2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxD,MAAK,YAAkD,IAA/CyD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a623a9b.chunk.js","sourcesContent":["import { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nconst Nav = () => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\">Live Score</Typography>\r\n            </Toolbar>\r\n\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Nav;","const API_KEY = \"m7YlX7h1UgVCSvoJ7LibJR7TeXK2\"\r\n\r\n\r\nexport const getmatches = () => {\r\n    const url = `https://cricapi.com/api/matches?apikey=${API_KEY}`;\r\n\r\n    return fetch(url).then((response) => response.json())\r\n        .catch((error) => alert(\"PLEASE CHECK INTERNET CONNECTION:\", error))\r\n};\r\n\r\n\r\n\r\n\r\n//load match details;\r\nexport const getMatchDetail= (id) => {\r\n    const url = ` https://cricapi.com/api/cricketScore/?apikey=${API_KEY}&unique_id=${id}`;\r\n    return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error) => console.log(error));\r\n\r\n};","import { Card, CardContent, Typography, CardActions, Button, Grid, Dialog, DialogContent, DialogContentText, DialogActions, DialogTitle } from \"@material-ui/core\";\r\nimport { getMatchDetail } from \"../Api/Api\";\r\nimport { useState, Fragment } from \"react\";\r\n\r\n\r\nconst Cart = ({match}) => {\r\n\r\n                   const [detail, setDetail]=useState({});\r\n                   const [open, setOpen]=useState(false);\r\n\r\nconst handleClick=(id)=>{\r\n  getMatchDetail(id)\r\n  .then((data)=>{\r\n    setDetail(data);\r\n    console.log(\"Match DATA:\", data)})\r\n  .catch((error)=> console.log(error));\r\n  handleOpen();\r\n                           \r\n};\r\n\r\n\r\n  const getMatchCart = () => {\r\n\r\n    return (\r\n      <Card style={{ marginTop: 20 }}>\r\n        <CardContent>\r\n          < Grid container justify=\"center\" alignItems={\"center\"} spacing={4}>\r\n            <Grid item >\r\n              <Typography variant=\"h5\">{match [\"team-1\"]}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <img\r\n                style={{ width: 100 }}\r\n                src=\"./img/a.png\" alt=\"nope\" />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">{match [\"team-2\"]}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions >\r\n          <Grid container justify=\"center\"  >\r\n            <Button onClick={()=>\r\n            {\r\n              handleClick(match.unique_id)\r\n            }} \r\n            \r\n            variant=\"contained\" color=\"primary\">Show Details\r\n            </Button>\r\n\r\n            <Button style={{ marginLeft: 5 }} variant=\"contained\" color=\"primary\">\r\n             Start Time {new Date(match.dateTimeGMT).toLocaleString()}\r\n             </Button>\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  };\r\n\r\n     const handleClose=()=>{\r\n       setOpen(false);\r\n\r\n     };\r\n     const handleOpen=()=>{\r\n       setOpen(true);\r\n\r\n     };\r\n\r\n\r\n      const getDialog=()=>\r\n        (<Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Match Detail..\"}</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n      <Typography>{detail.stat}</Typography>\r\n      <Typography>\r\n        Match\r\n        <span style={{fontStyle:\"italic\", fontWeight:\"bold\"}}>\r\n          {detail.matchStarted ? \"Started\" : \"Still not started\"} {\" \"}\r\n        </span>\r\n\r\n      </Typography>\r\n      <Typography>\r\n        Score\r\n        <span style={{fontStyle:\"italic\", fontWeight:\"bold\"}}>\r\n   \r\n          {detail.score}\r\n        </span>\r\n\r\n      </Typography>\r\n\r\n\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\" autoFocus> \r\n                Close\r\n              </Button>\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n         );\r\n\r\n  return <Fragment>\r\n   {getMatchCart()}\r\n   {getDialog()}\r\n  </Fragment>\r\n};\r\nexport default Cart;","import './App.css';\nimport {Button, Grid, Typography} from \"@material-ui/core\"\nimport Nav from './Navbar/Nav'\nimport Cart from './Component/Cart'\nimport { getmatches } from './Api/Api'\nimport { useEffect, useState, Fragment } from 'react';\n\n\nfunction App() {\n\nconst [matches,setMatches]=useState([]);\n  useEffect(() => {\n\n\n    getmatches()\n      .then((data) => {\n        setMatches(data.matches)\n        \n      } )\n      .catch((error) => alert(\"could not loading data\"));\n\n  }, []);\n  \n\n  return (\n    <div className=\"App\">\n     \n      <Nav />\n      <Typography variant=\"h4\" style={{marginTop:20}}>Welcome to My Live Score App</Typography>\n\n       \n      <Grid container>\n        <Grid sm=\"2\">\n        </Grid> \n        <Grid sm=\"8\">\n        {\n        matches.map((match)=>(\n          <Fragment>\n            {\n              (match.type==\"Twenty20\" ?(\n                <Cart key={match.unique_id} match={match} />\n              ) : (\"\"))\n            }\n          </Fragment>\n\n        ))  }\n      </Grid>\n\n      </Grid>\n    \n   \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}